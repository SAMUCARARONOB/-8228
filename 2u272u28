local player = game.Players.LocalPlayer
local soundService = game:GetService("SoundService")

-- Interface GUI
local gui = Instance.new("ScreenGui")
gui.Parent = player:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 600, 0, 500)  -- Altura ajustada para 500 pixels
frame.Position = UDim2.new(0.5, -300, 0.5, -250)  -- Meio da tela
frame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true  -- Permitir arrastar a interface inteira
frame.Parent = gui

-- Efeito de sombra para o frame
local shadow = Instance.new("ImageLabel")
shadow.Size = frame.Size + UDim2.new(0, 15, 0, 15)  -- Tamanho ajustado para ser 2 pixels maior em todos os lados
shadow.Position = frame.Position - UDim2.new(0, 7, 0, 7)
shadow.Image = "rbxassetid://1316045217"
shadow.ImageTransparency = 0.5
shadow.ScaleType = Enum.ScaleType.Slice
shadow.SliceCenter = Rect.new(10, 10, 118, 118)
shadow.BackgroundTransparency = 1
shadow.ZIndex = 0
shadow.Parent = gui

-- Mantendo a sombra alinhada com o frame
frame:GetPropertyChangedSignal("Position"):Connect(function()
    shadow.Position = frame.Position - UDim2.new(0, 7, 0, 7)
end)

frame:GetPropertyChangedSignal("Size"):Connect(function()
    shadow.Size = frame.Size + UDim2.new(0, 15, 0, 15)
end)

-- Título
local titleBar = Instance.new("Frame")
titleBar.Size = UDim2.new(1, 0, 0, 50)
titleBar.Position = UDim2.new(0, 0, 0, 0)
titleBar.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
titleBar.BorderSizePixel = 0
titleBar.Parent = frame

local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, 0, 1, 0)
titleLabel.Position = UDim2.new(0, 0, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Lista de Sons"
titleLabel.TextColor3 = Color3.new(1, 1, 1)
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextSize = 24
titleLabel.Parent = titleBar

-- Efeito de gradiente no título
local gradient = Instance.new("UIGradient")
gradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 176, 255)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 88, 255))
})
gradient.Parent = titleLabel

local scrollingFrame = Instance.new("ScrollingFrame")
scrollingFrame.Size = UDim2.new(1, 0, 1, -50)  -- Ajuste para não cobrir o título
scrollingFrame.Position = UDim2.new(0, 0, 0, 50)
scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
scrollingFrame.ScrollBarThickness = 10
scrollingFrame.ScrollingDirection = Enum.ScrollingDirection.Y
scrollingFrame.BackgroundTransparency = 1
scrollingFrame.Parent = frame

local UIListLayout = Instance.new("UIListLayout")
UIListLayout.Parent = scrollingFrame
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0, 5)

-- Função para obter todos os sons únicos com base em seus barulhos
local function getAllUniqueSounds()
    local sounds = {}
    local soundHashes = {}

    for _, sound in pairs(game.Workspace:GetDescendants()) do
        if sound:IsA("Sound") then
            local hash = sound.SoundId  -- Usar o ID do som para verificar a unicidade
            if not soundHashes[hash] then
                soundHashes[hash] = true
                table.insert(sounds, sound)
            end
        end
    end

    return sounds
end

local sounds = getAllUniqueSounds()
local currentSound = nil

local function createSoundButton(sound)
    local buttonFrame = Instance.new("Frame")
    buttonFrame.Size = UDim2.new(1, 0, 0, 80)  -- Tamanho aumentado para melhor visualização
    buttonFrame.BackgroundTransparency = 0.5
    buttonFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    buttonFrame.BorderSizePixel = 0
    buttonFrame.Parent = scrollingFrame

    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(0.4, -10, 1, 0)
    textLabel.Position = UDim2.new(0, 10, 0, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = sound.Name
    textLabel.TextColor3 = Color3.new(1, 1, 1)
    textLabel.Font = Enum.Font.Gotham
    textLabel.TextSize = 18
    textLabel.Parent = buttonFrame

    -- Botão para reproduzir som
    local playButton = Instance.new("TextButton")
    playButton.Size = UDim2.new(0.25, -10, 0.4, -10)
    playButton.Position = UDim2.new(0.45, 10, 0.1, 0)
    playButton.Text = "Reproduzir"
    playButton.BackgroundColor3 = Color3.fromRGB(0, 88, 255)
    playButton.TextColor3 = Color3.new(1, 1, 1)
    playButton.Font = Enum.Font.Gotham
    playButton.TextSize = 18
    playButton.Parent = buttonFrame

    playButton.MouseButton1Click:Connect(function()
        if currentSound and currentSound.IsPlaying then
            currentSound:Stop()
        end

        -- Criar um novo som para reprodução
        local tempSound = Instance.new("Sound")
        tempSound.SoundId = sound.SoundId
        tempSound.Parent = soundService
        tempSound:Play()
        currentSound = tempSound

        -- Remover o som temporário após a reprodução
        tempSound.Ended:Connect(function()
            tempSound:Destroy()
        end)
    end)

    -- Botão para copiar ID do som
    local copyIdButton = Instance.new("TextButton")
    copyIdButton.Size = UDim2.new(0.25, -10, 0.4, -10)
    copyIdButton.Position = UDim2.new(0.7, 10, 0.1, 0)
    copyIdButton.Text = "Copiar ID"
    copyIdButton.BackgroundColor3 = Color3.fromRGB(0, 88, 255)
    copyIdButton.TextColor3 = Color3.new(1, 1, 1)
    copyIdButton.Font = Enum.Font.Gotham
    copyIdButton.TextSize = 18
    copyIdButton.Parent = buttonFrame

    copyIdButton.MouseButton1Click:Connect(function()
        setclipboard(sound.SoundId)
    end)

    scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, scrollingFrame.CanvasSize.Y.Offset + 80)  -- Atualiza o tamanho da tela
end

for _, sound in ipairs(sounds) do
    createSoundButton(sound)
end
